@using Library.Config;
@using WebBanMyPham.Areas.Administrator.EntityModel;
@model EMenu
@{
    ViewBag.Title = "Add menu";
    Layout = "~/Areas/Administrator/Views/Templates/_LayoutPage.cshtml";
    SystemMenuLocation menuLocation = ViewBag.MenuLocation ?? new SystemMenuLocation();
    int flag = 0;
}
<div class="span12">
    <div class="widget ">
        <div class="widget-header">
            <i class=" icon-plus-sign"></i>
            <h3>@ViewBag.Title</h3>
        </div> <!-- /widget-header -->

        <div class="widget-content">
            @Html.ValidationSummary(true)
            @using (Html.BeginForm("Create", "Menu", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <div class="control-group">
                    <label class="control-label" for="Title">Title<span class="asterisk">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Title, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Title)
                    </div>
                </div>
                <input type="hidden" name="Location" value="@menuLocation.LocationId" />

                <div class="control-group">
                    @Html.LabelFor(c => c.Alias, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Alias, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Alias)
                    </div>
                </div>
                

                <div class="control-group" style="margin-top: 40px">
                    @Html.LabelFor(c => c.Description, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(c => c.Description, new { @class = "basic-ckeditor" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(c => c.ParentID, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(c => c.ParentID, new SelectList(ViewBag.ListParentMenu, "Value", "Text"), new { @class = "span3" })
                        @Html.ValidationMessageFor(c => c.ParentID)
                    </div>

                </div>

                <div class="control-group">
                    <label class="control-label" for="Type">Type Show<span class="asterisk">*</span></label>
                    <div class="controls">
                        @Html.DropDownListFor(c => c.Type, new SelectList(ViewBag.ListTypeMenu, "Value", "Text"), new { @class = "span3" })
                        @Html.ValidationMessageFor(c => c.Type)
                    </div>
                </div>
                

                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox inline">
                            <input data-val="true" id="Status" name="Status" type="checkbox" value="true" checked="checked"> Status
                        </label>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.MetaTitle, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.MetaTitle, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.MetaTitle)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.MetaDescription, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(c => c.MetaDescription, new { @class = "span4", rows = "3" })
                        @Html.ValidationMessageFor(c => c.MetaDescription)
                    </div>
                </div>
                <div class="form-actions">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <a class="btn" href="@Url.Action(menuLocation.AliasMenu,"Menu")">Cancel</a>
                </div>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        AutoAlias('Title', 'Alias');
        
        bindUl();

        CreateCkEditor();
    });
</script>
@*<script type="text/javascript">
    var counts = 0;
    var count = 0;
    function changeNameTag() {
        $('#ListName').unbind();
        $('#changeName').unbind();
        $('#saveName').unbind();
        $('#delName').unbind();

        if ($('#ListName').val() != "") {
            $('#changeName').show();
        }
        $('#ListName').change(function () {
            desployCkeditor();
            var item = $('#ListName').val();
            $('#Display-Tabs').find('h4').each(function () {
                //$('#cke_' + this.attr('id')).hide();
                $(this).hide();
            });
            $('#Display-Tabs').find('div.price-tabtour').each(function () {
                //$('#cke_' + this.attr('id')).hide();
                $(this).hide();
            });
            $('div#divprice_' + item + '').show();
            $('#Content_' + item + ' ').show();
            $('#' + 'TabTours_' + item + '__Content').show();
            CKEDITOR.replace('TabTours_' + item + '__Content', {
                height: '400px',
                toolbar: [
                    { name: 'document', groups: ['mode', 'document', 'doctools'], items: ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'] },
                    { name: 'clipboard', groups: ['clipboard', 'undo'], items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
                    { name: 'editing', groups: ['find', 'selection', 'spellchecker'], items: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt'] },
                    { name: 'forms', items: ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField'] },
                    '/',
                    { name: 'basicstyles', groups: ['basicstyles', 'cleanup'], items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                    { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi'], items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language'] },
                    { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                    { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
                    '/',
                    { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                    { name: 'colors', items: ['TextColor', 'BGColor'] },
                    { name: 'tools', items: ['Maximize', 'ShowBlocks'] },
                    { name: 'others', items: ['-'] },
                    { name: 'about', items: ['About'] }
                ]
            });

        });
    }



    function desployCkeditor() {
        var editors = $("textarea");
        if (editors.length) {
            editors.each(function () {
                var instance = CKEDITOR.instances[$(this).attr("id")];
                if (instance && $(this).attr("id") != 'Description' && $(this).attr("id") != 'TourIncluded' && $(this).attr("id") != 'TourExcluded') {
                    instance.destroy(true);
                    $(this).val(instance.getData());
                    $(this).hide();
                }
            });
        }
    }

    function sapxepListName() {
        var temp = 0;
        $("#ListName option").each(function () {
            var value = $(this).attr("value");
            var valuereplace = value.replace(value, temp);
            $(this).attr("value", valuereplace);
            temp++;
        });
    }

    function sapxepTab() {

        var temp = 0;
        $("#Display-Tabs label").each(function () {
            var id = $(this).attr("id");
            var abc = id.substring(id.indexOf('_') + 1, id.length);
            var idreplace = id.replace(abc, temp);
            $(this).attr("id", idreplace);
            temp++;
        });
        temp = 0;
        $("#Display-Tabs textarea").each(function () {
            var id = $(this).attr("id");
            var name = $(this).attr("name");
            var abc = name.substring(name.indexOf('[') + 1, name.indexOf(']'));
            //console.log('name: ' + name + ' and : ' + abc);
            var idreplace = id.replace(abc, temp);
            var namereplace = name.replace(abc, temp);
            $(this).attr("id", idreplace);
            $(this).attr("name", namereplace);
            temp++;
        });
        temp = 0;
        $("#Display-Tabs input.title-tab").each(function () {
            var id = $(this).attr("id");
            var name = $(this).attr("name");
            var abc = name.substring(name.indexOf('[') + 1, name.indexOf(']'));
            //console.log('name: ' + name + ' and : ' + abc);
            var idreplace = id.replace(abc, temp);
            var namereplace = name.replace(abc, temp);
            $(this).attr("id", idreplace);
            $(this).attr("name", namereplace);

            temp++;
        });
        temp = 0;

        $("#Display-Tabs input.price-tab").each(function () {
            var id = $(this).attr("id");
            var name = $(this).attr("name");
            var abc = name.substring(name.indexOf('[') + 1, name.indexOf(']'));
            //console.log('name: ' + name + ' and : ' + abc);
            var idreplace = id.replace(abc, temp);
            var namereplace = name.replace(abc, temp);
            $(this).attr("id", idreplace);
            $(this).attr("name", namereplace);

            temp++;
        });
        temp = 0;
    }


    function bindRightClick() {
        $('.allImage li').unbind();
        $('.allImage li').bind('contextmenu', function (e) {
            $('#context-menu').css('left', e.pageX + 'px');
            $('#context-menu').css('top', e.pageY + 'px');
            $('#context-menu').show();
            e.preventDefault();
            curentImg = $(this);
            return false;
        });
    }

    function sapxep() {
        var temp = 0;
        $(".allImage li").each(function () {
            $(this).find('input').each(function () {
                var id = $(this).attr("id");
                var name = $(this).attr("name");
                var abc = name.substring(name.indexOf('[') + 1, name.indexOf(']'));
                //console.log('name: ' + name + ' and : ' + abc);
                var idreplace = id.replace(abc, temp);
                var namereplace = name.replace(abc, temp);
                $(this).attr("id", idreplace);
                $(this).attr("name", namereplace);
            });
            temp++;
        });
        bindRightClick();
    }

    function loadHtmlForImage(val) {
        if ($('#EGalleryITems_' + val + '__Image').length > 0) {
            return loadHtmlForImage(++val);
        } else {
            //console.log(val);
            var image = '<input id="EGalleryITems_' + val + '__Image" name="EGalleryITems[' + val + '].Image" type="hidden" value="' + $('#img-thumb').val() + '"/>';
            var title = '<input id="EGalleryITems_' + val + '__Title" name="EGalleryITems[' + val + '].Title" type="hidden" value="' + $('#img-title').val() + '"/>';
            var img = '<img src="' + $('#img-thumb').val() + '" width="100" height="80" /><label>' + $('#img-title').val() + '</label>';
            return ('<li>' + image + title + img + '</li>');
        }
    }
    $('#addTab').click(function () {
        changeNameTag();
        if ($('#tabName').val() == "") {
            alert('Please enter name tab tour');
            $('#tabName').focus();
        } else if (checkValidate($('#tabName').val())) {
            alert("Name tab tour is exist");
        } else {
            var counts = $("#ListName option").length;
            var inputPrice = "<div id= 'divprice_" + counts + "' class='price-tabtour'><strong>Price: </strong><input type='text' id= 'TabTours_" + counts + "__Price' name='TabTours[" + counts + "].Price' class='span1 price-tab' value='0'/></div>";
            var label = '<h4 id="Content_' + counts + '">Content Tab Tour : ' + $('#tabName').val() + '</h4>';
            var textarea = '<input type="hidden" class="title-tab" id="TabTours_' + counts + '__TitleTab" name="TabTours[' + counts + '].TitleTab" value="' + $('#tabName').val() + '"/></div>' +
                '<div style="clear: both"><textarea id="TabTours_' + counts + '__Content" name="TabTours[' + counts + '].Content" rows="20" class="full-ckeditor"></textarea>';
            var html = '<option  value="' + counts + '">' + $('#tabName').val() + ' </option>';
            $('#ListName').append(html);
            $('#ListName').show();
            $('#ListName').val(counts);
            desployCkeditor();
            $('#Display-Tabs').find('h4').each(function () {
                //$('#cke_' + this.attr('id')).hide();
                $(this).hide();
            });
            $('#Display-Tabs').find('div.price-tabtour').each(function () {
                //$('#cke_' + this.attr('id')).hide();
                $(this).hide();
            });
            $('#Display-Tabs').append(inputPrice + label + textarea);


            $('#tabName').val("");
            sapxepListName();
            sapxepTab();
            var value = $("#ListName option").last().attr("value");
            CKEDITOR.replace('TabTours_' + value + '__Content', {
                height: '300px',
                toolbar: [
                    { name: 'document', groups: ['mode', 'document', 'doctools'], items: ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'] },
                    { name: 'clipboard', groups: ['clipboard', 'undo'], items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
                    { name: 'editing', groups: ['find', 'selection', 'spellchecker'], items: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt'] },
                    { name: 'forms', items: ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField'] },
                    '/',
                    { name: 'basicstyles', groups: ['basicstyles', 'cleanup'], items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                    { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi'], items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language'] },
                    { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                    { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
                    '/',
                    { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                    { name: 'colors', items: ['TextColor', 'BGColor'] },
                    { name: 'tools', items: ['Maximize', 'ShowBlocks'] },
                    { name: 'others', items: ['-'] },
                    { name: 'about', items: ['About'] }
                ]
            });
        }
    });

    if ($("#Deal").val() == 'False') {
        $(".w-time-deal").hide();
    } else {
        $(".w-time-deal").show();
    }
    $("#Deal").change(function () {
        if ($("#Deal").val() == 'False') {
            $(".w-time-deal").hide();
        } else {
            $(".w-time-deal").show();
        }
    });
    $("#StartDeal").datepicker({
        minDate: new Date(),
    });

    function checkValidate(value) {
        var f = false;
        $('#Display-Tabs').find('input').each(function () {
            if ($(this).val() == value) {
                f = true;
            }
        });
        return f;
    }
    $('html').click(function (e) {
        $('#context-menu').hide();
    });
    $('#context-menu').click(function (e) {
        e.stopPropagation();
        $(curentImg).remove();
        sapxep();
        $('#context-menu').hide(100);
    });
    $(window).resize(function () {
        $('#context-menu').hide();
    });
    //Thêm ảnh
    $('#add').click(function () {
        if ($('#img').val() == "") {
            alert("Xin vui lòng chọn ảnh");
        } else {
            var data = '';
            while (true) {
                if ($('#EGalleryITems_0__Image').length == 0) {
                    data = loadHtmlForImage(0);
                    count = 1;
                } else {
                    data = loadHtmlForImage(count++);
                }
                break;
            }
            $('.allImage').append(data);
            sapxep();
            bindRightClick();
            $('#img-title').val('');
            $('#img-thumb').val('');
            $('#img').val('');
        }

    });
    $(document).ready(function () {
        $('#Theme').multiselect();
        desployCkeditor();
        CreateCkEditor();
        changeNameTag();
        bindUl();
        bindRightClick();
        if ($('#ListName').val() == null) {
            $('#ListName').hide();
        } else {
            $('#ListName').show();
        }


        AutoAlias('Title', 'Alias');

    });

</script>*@